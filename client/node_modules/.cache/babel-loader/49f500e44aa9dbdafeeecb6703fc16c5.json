{"ast":null,"code":"import React,{Fragment}from'react';import{Link}from'react-router-dom';import Moment from'react-moment';function PostList(_ref){var auth=_ref.auth,post=_ref.post,deletePost=_ref.deletePost,likePost=_ref.likePost,unlikePost=_ref.unlikePost;console.log(\"PostList\",post,auth);var deletePostId=function deletePostId(id){deletePost(id);};var LikePostId=function LikePostId(id){likePost(id);};var unlikePostId=function unlikePostId(id){unlikePost(id);};return/*#__PURE__*/React.createElement(Fragment,null,post.posts&&post.posts!==null?post.posts.map(function(post){return/*#__PURE__*/React.createElement(\"div\",{className:\"posts\",key:post._id},/*#__PURE__*/React.createElement(\"div\",{className:\"post bg-white p-1 my-1\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"a\",{href:post.avatar},/*#__PURE__*/React.createElement(\"img\",{className:\"round-img\",src:post.avatar,alt:\"\"}),/*#__PURE__*/React.createElement(\"h4\",null,post.name))),/*#__PURE__*/React.createElement(\"div\",{key:post._id},/*#__PURE__*/React.createElement(\"p\",{className:\"my-1\"},post.text),/*#__PURE__*/React.createElement(\"p\",{className:\"post-date\"},\"Posted on  \",/*#__PURE__*/React.createElement(Moment,{format:\"YYYY/MM/DD\"},post.date)),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-light\",onClick:function onClick(){LikePostId(post._id);}},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-thumbs-up\"}),/*#__PURE__*/React.createElement(\"span\",null,post.likes.length)),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-light\",onClick:function onClick(){unlikePostId(post._id);}},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-thumbs-down\"})),/*#__PURE__*/React.createElement(Link,{to:\"posts/\".concat(post._id),className:\"btn btn-primary\"},\"Discussion \",/*#__PURE__*/React.createElement(\"span\",{className:\"comment-count\"},post.comments.length)),auth.user._id===post.user?/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:function onClick(){deletePostId(post._id);},className:\"btn btn-danger\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-times\"})):\"\")));}):/*#__PURE__*/React.createElement(\"strong\",null,\"No Posts Found\"));}export default PostList;","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/post/PostList.js"],"names":["React","Fragment","Link","Moment","PostList","auth","post","deletePost","likePost","unlikePost","console","log","deletePostId","id","LikePostId","unlikePostId","posts","map","_id","avatar","name","text","date","likes","length","comments","user"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\n\r\nfunction PostList({auth, post, deletePost, likePost, unlikePost}) {\r\n    console.log(\"PostList\", post, auth)\r\n\r\n\r\n    const deletePostId = (id)=>{\r\n        deletePost(id)\r\n    }\r\n\r\n    const LikePostId = (id) =>{\r\n        likePost(id)\r\n    }\r\n\r\n    const unlikePostId = (id) =>{\r\n        unlikePost(id)\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {post.posts && post.posts !== null ? \r\n            post.posts.map(post=>(\r\n                <div className=\"posts\" key={post._id}>\r\n                    <div className=\"post bg-white p-1 my-1\">\r\n                    <div>\r\n                        <a href={post.avatar}>\r\n                        <img\r\n                            className=\"round-img\"\r\n                            src={post.avatar}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{post.name}</h4>\r\n                        </a>\r\n                    </div>\r\n                    <div key={post._id}>\r\n                        <p className=\"my-1\">\r\n                        {post.text}\r\n                        </p>\r\n                        <p className=\"post-date\">\r\n                            Posted on  <Moment format=\"YYYY/MM/DD\">\r\n                                {post.date}\r\n                            </Moment>\r\n                        </p>\r\n                        <button type=\"button\" className=\"btn btn-light\"\r\n                        onClick= {()=>{LikePostId(post._id)}}\r\n                        >\r\n                        <i className=\"fa fa-thumbs-up\"></i>\r\n                            <span>{post.likes.length}</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={()=>{unlikePostId(post._id)}}>\r\n                        <i className=\"fa fa-thumbs-down\"></i>\r\n                        </button>\r\n\r\n                        <Link to={`posts/${post._id}`} className=\"btn btn-primary\">\r\n                            Discussion <span className='comment-count'>{post.comments.length}</span>\r\n                        </Link>\r\n\r\n                        {auth.user._id === post.user ? \r\n                            <button      \r\n                            type=\"button\"\r\n                            onClick = {()=>{deletePostId(post._id)}}\r\n                            className=\"btn btn-danger\">\r\n                                <i className=\"fa fa-times\"></i>\r\n                            </button>\r\n                        :\"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            ))\r\n            \r\n            :<strong>No Posts Found</strong>}\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPostList.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    deletePost : PropTypes.func.isRequired,\r\n    likePost: PropTypes.func.isRequired,\r\n    unlikePost: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PostList\r\n\r\n"]},"metadata":{},"sourceType":"module"}