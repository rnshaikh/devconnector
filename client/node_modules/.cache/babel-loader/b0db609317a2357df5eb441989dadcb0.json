{"ast":null,"code":"import { setAlert } from './alert';\nimport axios from 'axios';\nimport { PROFILE_ERROR, GET_PROFILE } from './types'; // current user profile\n\nexport const getCurrentUserProfile = () => async dispatch => {\n  try {\n    debugger;\n    const res = await axios.get('http://127.0.0.1:5000/api/profile/profile/');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    debugger;\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n}; // create update profile\n\nexport const createProfile = (fromData, history, edit) => async dispatch => {\n  try {\n    console.log(\"Profile Form Data\", fromData);\n    debugger;\n\n    if (fromData.skills.constructor == Array) {\n      fromData.skills = fromData.skills.join();\n    }\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.post('http://127.0.0.1:5000/api/profile/createupdateprofile/', fromData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\"));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err);\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/actions/profile.js"],"names":["setAlert","axios","PROFILE_ERROR","GET_PROFILE","getCurrentUserProfile","dispatch","res","get","type","payload","data","err","status","response","msg","statusText","createProfile","fromData","history","edit","console","log","skills","constructor","Array","join","config","headers","post","push","errors","forEach","error"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAA0C,SAA1C,C,CAGA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAK,MAAMC,QAAN,IAAiB;AAEvD,MAAG;AACC;AACA,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,4CAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,WADD;AAELM,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GATD,CAUA,OAAMC,GAAN,EAAU;AACN;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,MAAM,EAACD,GAAG,CAACE,QAAJ,CAAaD,MAArB;AAA6BE,QAAAA,GAAG,EAACH,GAAG,CAACE,QAAJ,CAAaE;AAA9C;AAFJ,KAAD,CAAR;AAIH;AAEJ,CApBM,C,CAsBP;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,IAApB,KAA6B,MAAMd,QAAN,IAAiB;AACvE,MAAG;AACCe,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,QAAjC;AACA;;AACA,QAAGA,QAAQ,CAACK,MAAT,CAAgBC,WAAhB,IAA+BC,KAAlC,EAAwC;AACpCP,MAAAA,QAAQ,CAACK,MAAT,GAAkBL,QAAQ,CAACK,MAAT,CAAgBG,IAAhB,EAAlB;AACH;;AACD,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAG;AACN,wBAAgB;AADV;AADC,KAAf;AAMA,UAAMrB,GAAG,GAAG,MAAML,KAAK,CAAC2B,IAAN,CAAW,wDAAX,EAAqEX,QAArE,EAA+ES,MAA/E,CAAlB;AAEArB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,WADD;AAELM,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACL,QAAQ,CAACmB,IAAI,GAAE,iBAAF,GAAqB,iBAA1B,CAAT,CAAR;;AAEA,QAAG,CAACA,IAAJ,EAAS;AACLD,MAAAA,OAAO,CAACW,IAAR,CAAa,YAAb;AACH;AAGJ,GAzBD,CA0BA,OAAMlB,GAAN,EAAU;AAEN,UAAMmB,MAAM,GAAGnB,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBoB,MAAjC;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AACA,QAAGmB,MAAH,EAAU;AACNA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAI;AACpB3B,QAAAA,QAAQ,CAACL,QAAQ,CAACgC,KAAD,EAAO,QAAP,CAAT,CAAR;AACH,OAFD;AAGH;;AAED3B,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAE;AAACG,QAAAA,MAAM,EAACD,GAAG,CAACE,QAAJ,CAAaD,MAArB;AAA6BE,QAAAA,GAAG,EAACH,GAAG,CAACE,QAAJ,CAAaE;AAA9C;AAFJ,KAAD,CAAR;AAKH;AACJ,CA3CM","sourcesContent":["import {setAlert} from './alert';\r\nimport axios from 'axios';\r\nimport{ PROFILE_ERROR, GET_PROFILE } from './types';\r\n\r\n\r\n// current user profile\r\nexport const getCurrentUserProfile = ()=> async dispatch =>{\r\n\r\n    try{\r\n        debugger;\r\n        const res = await axios.get('http://127.0.0.1:5000/api/profile/profile/')\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){ \r\n        debugger;\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n// create update profile\r\nexport const createProfile = (fromData, history, edit) => async dispatch =>{\r\n    try{    \r\n        console.log(\"Profile Form Data\", fromData)\r\n        debugger;\r\n        if(fromData.skills.constructor == Array){\r\n            fromData.skills = fromData.skills.join()\r\n        }\r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('http://127.0.0.1:5000/api/profile/createupdateprofile/', fromData, config)\r\n        \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit? \"Profile Updated\": \"Profile Created\"));\r\n        \r\n        if(!edit){\r\n            history.push('/dashboard');\r\n        }\r\n\r\n\r\n    }   \r\n    catch(err){\r\n\r\n        const errors = err.response.data.errors\r\n        console.log(err)\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}