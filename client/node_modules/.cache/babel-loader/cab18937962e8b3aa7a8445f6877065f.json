{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\src\\\\components\\\\dashboard\\\\ProfileDetail.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { getProfileByUserId } from '../../actions/profile';\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction ProfileDetail({\n  match,\n  profile,\n  getProfileByUserId\n}) {\n  useEffect(() => {\n    getProfileByUserId(match.params.id);\n  }, []);\n  console.log(\"Profile\", profile);\n  return profile.loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, profile.loading, \" ? \", /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }), \":\", /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n}\n\nProfileDetail.propTypes = {\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  getProfileByUserId: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByUserId\n})(ProfileDetail);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/dashboard/ProfileDetail.js"],"names":["React","useEffect","Fragment","connect","getProfileByUserId","Spinner","PropTypes","Link","ProfileDetail","match","profile","params","id","console","log","loading","propTypes","auth","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,OAAR,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,SAASC,aAAT,CAAuB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBN,EAAAA;AAAjB,CAAvB,EAA6D;AAEzDH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,kBAAkB,CAACK,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAlB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB;AACA,SAAOA,OAAO,CAACK,OAAR,gBAAkB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAEH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,CAACK,OADb,sBACwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,oBAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AASH;;AAEDP,aAAa,CAACQ,SAAd,GAA0B;AACtBC,EAAAA,IAAI,EAAEX,SAAS,CAACY,MAAV,CAAiBC,UADD;AAEtBT,EAAAA,OAAO,EAAGJ,SAAS,CAACY,MAAV,CAAiBC,UAFL;AAGtBf,EAAAA,kBAAkB,EAAGE,SAAS,CAACc,IAAV,CAAeD;AAHd,CAA1B;;AAMA,MAAME,eAAe,GAACC,KAAK,KAAG;AAC1BL,EAAAA,IAAI,EAAGK,KAAK,CAACL,IADa;AAE1BP,EAAAA,OAAO,EAAGY,KAAK,CAACZ;AAFU,CAAH,CAA3B;;AAKA,eAAeP,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAiDI,aAAjD,CAAf","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport { getProfileByUserId } from '../../actions/profile';\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction ProfileDetail({match, profile, getProfileByUserId}) {\r\n\r\n    useEffect(() => {\r\n        getProfileByUserId(match.params.id);\r\n    }, []);\r\n\r\n    console.log(\"Profile\", profile)\r\n    return profile.loading ? <Spinner></Spinner>:\r\n        (\r\n        <Fragment>\r\n            {profile.loading} ? <Spinner></Spinner>:\r\n            <Fragment>\r\n                \r\n            </Fragment>\r\n        </Fragment>\r\n        )\r\n}\r\n\r\nProfileDetail.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    profile : PropTypes.object.isRequired,\r\n    getProfileByUserId : PropTypes.func.isRequired,\r\n\r\n}\r\nconst mapStateToProps=state=>({\r\n    auth : state.auth,\r\n    profile : state.profile,\r\n  })\r\n  \r\nexport default connect(mapStateToProps, { getProfileByUserId })(ProfileDetail);\r\n\r\n"]},"metadata":{},"sourceType":"module"}