{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\src\\\\components\\\\post\\\\PostList.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction PostList({\n  auth,\n  post,\n  deletePost,\n  likePost,\n  unlikePost\n}) {\n  console.log(\"PostList\", post, auth);\n\n  const deletePostId = id => {\n    deletePost(id);\n  };\n\n  const LikePostId = id => {\n    likePost(id);\n  };\n\n  const unlikePostId = id => {\n    unlikePost(id);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, post.posts && post.posts !== null ? post.posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: post.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: post.avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, post.name))), /*#__PURE__*/React.createElement(\"div\", {\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, post.text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Posted on  \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 40\n    }\n  }, post.date)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: () => {\n      LikePostId(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, post.likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: () => {\n      unlikePostId(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `posts/${post._id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Discussion \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 40\n    }\n  }, post.comments.length)), auth.user._id === post.user ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      deletePostId(post._id);\n    },\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  })) : \"\")))) : /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }\n  }, \"No Posts Found\"));\n}\n\nPostList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  likePost: PropTypes.func.isRequired,\n  unlikePost: PropTypes.func.isRequired\n};\nexport default PostList;","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/post/PostList.js"],"names":["React","Fragment","PropTypes","Link","PostList","auth","post","deletePost","likePost","unlikePost","console","log","deletePostId","id","LikePostId","unlikePostId","posts","map","_id","avatar","name","text","date","likes","length","comments","user","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PostList({auth, post, deletePost, likePost, unlikePost}) {\r\n    console.log(\"PostList\", post, auth)\r\n\r\n\r\n    const deletePostId = (id)=>{\r\n        deletePost(id)\r\n    }\r\n\r\n    const LikePostId = (id) =>{\r\n        likePost(id)\r\n    }\r\n\r\n    const unlikePostId = (id) =>{\r\n        unlikePost(id)\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {post.posts && post.posts !== null ? \r\n            post.posts.map(post=>(\r\n                <div className=\"posts\" key={post._id}>\r\n                    <div className=\"post bg-white p-1 my-1\">\r\n                    <div>\r\n                        <a href={post.avatar}>\r\n                        <img\r\n                            className=\"round-img\"\r\n                            src={post.avatar}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{post.name}</h4>\r\n                        </a>\r\n                    </div>\r\n                    <div key={post._id}>\r\n                        <p className=\"my-1\">\r\n                        {post.text}\r\n                        </p>\r\n                        <p className=\"post-date\">\r\n                            Posted on  <Moment format=\"YYYY/MM/DD\">\r\n                                {post.date}\r\n                            </Moment>\r\n                        </p>\r\n                        <button type=\"button\" className=\"btn btn-light\"\r\n                        onClick= {()=>{LikePostId(post._id)}}\r\n                        >\r\n                        <i className=\"fa fa-thumbs-up\"></i>\r\n                            <span>{post.likes.length}</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={()=>{unlikePostId(post._id)}}>\r\n                        <i className=\"fa fa-thumbs-down\"></i>\r\n                        </button>\r\n                        <Link to={`posts/${post._id}`} className=\"btn btn-primary\">\r\n                            Discussion <span className='comment-count'>{post.comments.length}</span>\r\n                        </Link>\r\n\r\n                        {auth.user._id === post.user ? \r\n                            <button      \r\n                            type=\"button\"\r\n                            onClick = {()=>{deletePostId(post._id)}}\r\n                            className=\"btn btn-danger\">\r\n                                <i className=\"fa fa-times\"></i>\r\n                            </button>\r\n                        :\"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            ))\r\n            \r\n            :<strong>No Posts Found</strong>}\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPostList.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    deletePost : PropTypes.func.isRequired,\r\n    likePost: PropTypes.func.isRequired,\r\n    unlikePost: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PostList\r\n\r\n"]},"metadata":{},"sourceType":"module"}