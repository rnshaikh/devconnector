{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\src\\\\components\\\\dashboard\\\\GitHubDetail.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getGithubRepo } from '../../actions/profile';\n\nfunction GitHubDetail({\n  profile,\n  getGithubRepo,\n  repos\n}) {\n  useEffect(() => {\n    getGithubRepo(profile.profile.handle);\n  }, [getGithubRepo]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"text-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), \" Github Repos\"), repos.map(repo => {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      class: \"repo bg-white p-1 my-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }, repo.name)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, repo.description)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"Stars: \", repo.stargazers_count), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"badge badge-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"Watchers: \", repo.watchers_count), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"badge badge-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"Forks: \", repo.forks_count))));\n  })));\n}\n\nGitHubDetail.propTypes = {\n  profile: PropTypes.object.isRequired,\n  repos: PropTypes.object.isRequired,\n  getGithubRepo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  repos: state.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepo\n})(GitHubDetail);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/dashboard/GitHubDetail.js"],"names":["React","useEffect","Fragment","connect","Spinner","PropTypes","Link","getGithubRepo","GitHubDetail","profile","repos","handle","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,OAAR,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,OAAD;AAASF,EAAAA,aAAT;AAAuBG,EAAAA;AAAvB,CAAtB,EAAqD;AAEjDT,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,aAAa,CAACE,OAAO,CAACA,OAAR,CAAgBE,MAAjB,CAAb;AACH,GAFQ,EAEN,CAACJ,aAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAI,IAAA,KAAK,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kBADE,EAIDG,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAE;AAAC;AAChB;AAAK,MAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAG,MAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,MAAA,MAAM,EAAC,QAA/B;AACA,MAAA,GAAG,EAAC,qBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC2BD,IAAI,CAACE,IADhC,CAAJ,CADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,WADR,CAHF,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAI,MAAA,KAAK,EAAC,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwCH,IAAI,CAACI,gBAA7C,CADN,eAEM;AAAI,MAAA,KAAK,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAwCJ,IAAI,CAACK,cAA7C,CAFN,eAGM;AAAI,MAAA,KAAK,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsCL,IAAI,CAACM,WAA3C,CAHN,CADF,CARA,CADgB;AAiBhB,GAjBD,CAJC,CADJ,CADJ;AA2BH;;AAEDX,YAAY,CAACY,SAAb,GAAyB;AACrBX,EAAAA,OAAO,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC,UADL;AAErBZ,EAAAA,KAAK,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UAFH;AAGrBf,EAAAA,aAAa,EAAEF,SAAS,CAACkB,IAAV,CAAeD;AAHT,CAAzB;;AAOA,MAAME,eAAe,GAACC,KAAK,KAAG;AAC1BhB,EAAAA,OAAO,EAAGgB,KAAK,CAAChB,OADU;AAE1BC,EAAAA,KAAK,EAAEe,KAAK,CAACf;AAFa,CAAH,CAA3B;;AAKA,eAAeP,OAAO,CAACqB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,YAA5C,CAAf","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport {getGithubRepo} from '../../actions/profile';\r\n\r\nfunction GitHubDetail({profile,getGithubRepo,repos}) {\r\n\r\n    useEffect(() => {\r\n        getGithubRepo(profile.profile.handle);\r\n    }, [getGithubRepo]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div class=\"profile-github\">\r\n          <h2 class=\"text-primary my-1\">\r\n            <i class=\"fab fa-github\"></i> Github Repos\r\n          </h2>\r\n          {repos.map(repo=>{(\r\n            <div class=\"repo bg-white p-1 my-1\">\r\n            <div>\r\n              <h4><a href={repo.html_url} target=\"_blank\"\r\n                  rel=\"noopener noreferrer\">{repo.name}</a></h4>\r\n              <p>\r\n                {repo.description}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                    <li class=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                    <li class=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                    <li class=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n            </div>\r\n          )})}\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGitHubDetail.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    repos: PropTypes.object.isRequired,\r\n    getGithubRepo: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    profile : state.profile,\r\n    repos: state.repos\r\n  })\r\n  \r\nexport default connect(mapStateToProps, { getGithubRepo })(GitHubDetail);\r\n\r\n"]},"metadata":{},"sourceType":"module"}