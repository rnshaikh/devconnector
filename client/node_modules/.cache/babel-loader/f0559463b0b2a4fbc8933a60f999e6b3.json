{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\src\\\\components\\\\comment\\\\Comments.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { useState } from 'react';\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getPostById, createComment } from '../../actions/post';\nimport Posts from '../post/Posts';\nimport CommentList from './CommentList';\n\nfunction Comments({\n  match,\n  post,\n  getPostById,\n  createComment\n}) {\n  const [formdata, setformdata] = useState({\n    text: \"\"\n  });\n  const {\n    text\n  } = formdata;\n  useEffect(() => {\n    getPostById(match.params.id);\n  }, [getPostById, match.params.id]);\n  console.log(\"comment.js\", post.post);\n\n  const onChange = e => {\n    setformdata({ ...formdata,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    debugger;\n    e.preventDefault();\n    createComment(formdata, post.post._id);\n    setformdata({ ...formdata,\n      text: \"\"\n    });\n  };\n\n  return post.loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts\",\n    class: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Back To Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"profile.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"round-img\",\n    src: post.post.gravtar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, post.post.name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, post.post.text))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post-form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bg-primary p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Leave A Comment\")), /*#__PURE__*/React.createElement(\"form\", {\n    class: \"form my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"text\",\n    cols: \"30\",\n    rows: \"5\",\n    value: text,\n    placeholder: \"Comment on this post\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    class: \"btn btn-dark my-1\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(CommentList, {\n    comments: post.post.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}\n\nComments.propTypes = {\n  post: PropTypes.object.isRequired,\n  getPostById: PropTypes.func.isRequired,\n  createComment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getPostById,\n  createComment\n})(Comments);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/comment/Comments.js"],"names":["React","useEffect","Fragment","connect","useState","Spinner","PropTypes","Link","getPostById","createComment","Posts","CommentList","Comments","match","post","formdata","setformdata","text","params","id","console","log","onChange","e","target","name","value","onSubmit","preventDefault","_id","loading","gravtar","comments","propTypes","object","isRequired","func","auth","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport { useState } from 'react'\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport {getPostById, createComment} from '../../actions/post';\r\nimport Posts from '../post/Posts';\r\nimport CommentList from './CommentList';\r\n\r\n\r\nfunction Comments({match,post,getPostById, createComment}) {\r\n\r\n    const [formdata, setformdata] = useState({\r\n        text:\"\",\r\n\r\n    });\r\n    const {\r\n        text,\r\n    } = formdata;\r\n\r\n    useEffect(() => {\r\n        getPostById(match.params.id);\r\n    }, [getPostById, match.params.id]);\r\n    console.log(\"comment.js\", post.post)\r\n    const onChange =(e)=>{ setformdata({...formdata, [e.target.name]:e.target.value})};\r\n    const onSubmit = (e)=>{\r\n        debugger;\r\n        e.preventDefault();\r\n        createComment(formdata,post.post._id)\r\n        setformdata({...formdata, text:\"\"})\r\n    }\r\n\r\n\r\n    return post.loading ? <Spinner></Spinner>:\r\n        (\r\n        <Fragment>\r\n            <Link to=\"/posts\" class=\"btn\">Back To Posts</Link>\r\n            <div class=\"post bg-white p-1 my-1\">\r\n                <div>\r\n                <a href=\"profile.html\">\r\n                    <img\r\n                    class=\"round-img\"\r\n                    src={post.post.gravtar}\r\n                    alt=\"\"\r\n                    />\r\n                    <h4>{post.post.name}</h4>\r\n                </a>\r\n                </div>\r\n                <div>\r\n                <p class=\"my-1\">\r\n                    {post.post.text}\r\n                </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"post-form\" onSubmit={e=> onSubmit(e)}> \r\n                <div class=\"bg-primary p\">\r\n                <h3>Leave A Comment</h3>\r\n                </div>\r\n                <form class=\"form my-1\">\r\n                <textarea\r\n                    name=\"text\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    value={text}\r\n                    placeholder=\"Comment on this post\"\r\n                    onChange = {(e)=>onChange(e)}\r\n                    required\r\n                ></textarea>\r\n                <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n\r\n            <CommentList comments={post.post.comments}></CommentList>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nComments.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    getPostById: PropTypes.func.isRequired,\r\n    createComment: PropTypes.func.isRequired,\r\n    auth : PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    post: state.post,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPostById, createComment })(Comments);\r\n"]},"metadata":{},"sourceType":"module"}