{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{Link,Redirect}from'react-router-dom';import{useState}from'react';import{connect}from\"react-redux\";import{setAlert}from\"../../actions/alert\";import{register}from\"../../actions/auth\";import PropTypes from'prop-types';export var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;var _onChange=function onChange(e){setFormData(_objectSpread({},formData,_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=function onSubmit(e){e.preventDefault();if(password!==password2){setAlert(\"Password does not match\",'danger');}else{console.log(\"Name\",name,email,password);register({name:name,email:email,password:password,password2:password2});}};if(isAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:\"/dashboard\"});}return/*#__PURE__*/React.createElement(\"section\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Sign Up\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"}),\" Create Your Account\"),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return _onSubmit(e);}},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",onChange:function onChange(e){return _onChange(e);},value:name,required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);}}),/*#__PURE__*/React.createElement(\"small\",{className:\"form-text\"},\"This site uses Gravatar so if you want a profile image, use a Gravatar email\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",minLength:\"6\",value:password,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\",minLength:\"6\",value:password2,onChange:function onChange(e){return _onChange(e);}})),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"my-1\"},\"Already have an account? \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Sign In\")));};Register.prototype={setAlert:PropTypes.func.isRequired,register:PropTypes.func.isRequired};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/auth/Register.js"],"names":["React","Link","Redirect","useState","connect","setAlert","register","PropTypes","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","prototype","func","isRequired","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from 'prop-types'\r\n\r\n \r\nexport const Register = ({setAlert, register, isAuthenticated}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n\r\n    });\r\n\r\n    const {name, email, password, password2} = formData;\r\n\r\n    const onChange = (e)=>{\r\n        setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    } \r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(password!==password2){\r\n            setAlert(\"Password does not match\",'danger')\r\n        }\r\n        else{\r\n            console.log(\"Name\", name, email, password);\r\n            register({name, email, password, password2})\r\n        }\r\n\r\n    }\r\n\r\n    if(isAuthenticated){\r\n      return <Redirect to=\"/dashboard\"></Redirect>\r\n    }\r\n\r\n    return (\r\n    <section className=\"container\">\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Name\" name=\"name\"  \r\n          onChange={e=> onChange(e)}\r\n          value={name} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" \r\n          value={email}\r\n          onChange={e=> onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password}\r\n            onChange={e=> onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\" \r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            minLength=\"6\"\r\n            value={password2}\r\n            onChange={e=> onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </section>\r\n    )\r\n}\r\n\r\nRegister.prototype = {\r\n  setAlert:PropTypes.func.isRequired,\r\n  register:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);"]},"metadata":{},"sourceType":"module"}