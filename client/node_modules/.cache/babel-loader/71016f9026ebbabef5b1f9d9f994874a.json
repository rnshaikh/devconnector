{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\src\\\\components\\\\post\\\\PostList.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { getPost, deletePost } from '../../actions/post';\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction PostList({\n  post,\n  deletePost,\n  likePost,\n  unlikePost\n}) {\n  console.log(\"PostList\", post);\n\n  const deletePostId = id => {\n    deletePost(id);\n  };\n\n  const LikePostId = id => {\n    likePost(id);\n  };\n\n  const unlikePostId = id => {\n    unlikePost(id);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, post.posts && post.posts !== null ? post.posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: post.avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, post.name))), /*#__PURE__*/React.createElement(\"div\", {\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, post.text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Posted on\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: () => {\n      LikePostId(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, post.likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: () => {\n      unlikePostId(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `posts/${post._id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Discussion \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 40\n    }\n  }, post.comments.length)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      deletePostId(post._id);\n    },\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }\n  }, \"No Posts Found\"));\n}\n\nPostList.propTypes = {\n  post: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  likePost: PropTypes.func.isRequired,\n  unlikePost: PropTypes.func.isRequired\n};\nexport default PostList;","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/post/PostList.js"],"names":["React","useEffect","Fragment","connect","getPost","deletePost","Spinner","PropTypes","Link","PostList","post","likePost","unlikePost","console","log","deletePostId","id","LikePostId","unlikePostId","posts","map","avatar","name","_id","text","likes","length","comments","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport { getPost, deletePost } from '../../actions/post';\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PostList({post, deletePost, likePost, unlikePost}) {\r\n    console.log(\"PostList\", post)\r\n\r\n\r\n    const deletePostId = (id)=>{\r\n        deletePost(id)\r\n    }\r\n\r\n    const LikePostId = (id) =>{\r\n        likePost(id)\r\n    }\r\n\r\n    const unlikePostId = (id) =>{\r\n        unlikePost(id)\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {post.posts && post.posts !== null ? \r\n            post.posts.map(post=>(\r\n                <div className=\"posts\">\r\n                    <div className=\"post bg-white p-1 my-1\">\r\n                    <div>\r\n                        <a href=\"\">\r\n                        <img\r\n                            className=\"round-img\"\r\n                            src={post.avatar}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{post.name}</h4>\r\n                        </a>\r\n                    </div>\r\n                    <div key={post._id}>\r\n                        <p className=\"my-1\">\r\n                        {post.text}\r\n                        </p>\r\n                        <p className=\"post-date\">\r\n                            Posted on \r\n                        </p>\r\n                        <button type=\"button\" className=\"btn btn-light\"\r\n                        onClick= {()=>{LikePostId(post._id)}}\r\n                        >\r\n                        <i className=\"fa fa-thumbs-up\"></i>\r\n                            <span>{post.likes.length}</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-light\" onClick={()=>{unlikePostId(post._id)}}>\r\n                        <i class=\"fa fa-thumbs-down\"></i>\r\n                        </button>\r\n                        <Link to={`posts/${post._id}`} className=\"btn btn-primary\">\r\n                            Discussion <span className='comment-count'>{post.comments.length}</span>\r\n                        </Link>\r\n                        <button      \r\n                        type=\"button\"\r\n                        onClick = {()=>{deletePostId(post._id)}}\r\n                        className=\"btn btn-danger\">\r\n                        <i className=\"fa fa-times\"></i>\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            ))\r\n            \r\n            :<strong>No Posts Found</strong>}\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPostList.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    deletePost : PropTypes.func.isRequired,\r\n    likePost: PropTypes.func.isRequired,\r\n    unlikePost: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PostList\r\n\r\n"]},"metadata":{},"sourceType":"module"}