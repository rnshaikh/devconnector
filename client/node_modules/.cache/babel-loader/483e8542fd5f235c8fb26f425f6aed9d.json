{"ast":null,"code":"import { setAlert } from './alert';\nimport axios from 'axios';\nimport { PROFILE_ERROR, GET_PROFILE, ADD_EDUCATION_ERROR, ADD_EXPERIENCE_ERROR, DELETE_ACCOUNT, CLEAR_PROFILE } from './types'; // current user profile\n\nexport const getCurrentUserProfile = () => async dispatch => {\n  try {\n    debugger;\n    const res = await axios.get('http://127.0.0.1:5000/api/profile/profile/');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    debugger;\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n}; // create update profile\n\nexport const createProfile = (fromData, history, edit = false) => async dispatch => {\n  try {\n    console.log(\"Profile Form Data\", fromData);\n    debugger;\n\n    if (fromData.skills.constructor == Array) {\n      fromData.skills = fromData.skills.join();\n    }\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.post('http://127.0.0.1:5000/api/profile/createupdateprofile/', fromData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err);\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const addEducation = (fromData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.post('http://127.0.0.1:5000/api/profile/addEducation/', fromData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Education Updated\" : \"Education Added\", \"success\"));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err);\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: ADD_EDUCATION_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const addExperience = (fromData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.post('http://127.0.0.1:5000/api/profile/addExperience/', fromData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Education Updated\" : \"Education Added\", \"success\"));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err);\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: ADD_EXPERIENCE_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.delete(`http://127.0.0.1:5000/api/profile/experience/${id}`, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Experience\" : \"Experience deleted\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err);\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.delete(`http://127.0.0.1:5000/api/profile/education/${id}`, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Education\" : \"Education deleted\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err);\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const deleteAccount = id => async dispatch => {\n  if (Window.confirm(\"Are you sure?\")) {\n    try {\n      const config = {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      };\n      const res = await axios.delete(`http://127.0.0.1:5000/api/profile/`, config);\n      dispatch({\n        type: CLEAR_PROFILE,\n        payload: res.data\n      });\n      dispatch({\n        type: DELETE_ACCOUNT,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"Account\" : \"Account deleted\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      console.log(err);\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error, \"danger\"));\n        });\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          status: err.response.status,\n          msg: err.response.statusText\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/actions/profile.js"],"names":["setAlert","axios","PROFILE_ERROR","GET_PROFILE","ADD_EDUCATION_ERROR","ADD_EXPERIENCE_ERROR","DELETE_ACCOUNT","CLEAR_PROFILE","getCurrentUserProfile","dispatch","res","get","type","payload","data","err","status","response","msg","statusText","createProfile","fromData","history","edit","console","log","skills","constructor","Array","join","config","headers","post","push","errors","forEach","error","addEducation","addExperience","deleteExperience","id","delete","deleteEducation","deleteAccount","Window","confirm"],"mappings":"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","sourcesContent":["import {setAlert} from './alert';\r\nimport axios from 'axios';\r\nimport{ PROFILE_ERROR, GET_PROFILE, ADD_EDUCATION_ERROR, ADD_EXPERIENCE_ERROR, DELETE_ACCOUNT,CLEAR_PROFILE} from './types';\r\n\r\n\r\n// current user profile\r\nexport const getCurrentUserProfile = ()=> async dispatch =>{\r\n\r\n    try{\r\n        debugger;\r\n        const res = await axios.get('http://127.0.0.1:5000/api/profile/profile/')\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){ \r\n        debugger;\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n// create update profile\r\nexport const createProfile = (fromData, history, edit=false) => async dispatch =>{\r\n    try{    \r\n        console.log(\"Profile Form Data\", fromData)\r\n        debugger;\r\n        if(fromData.skills.constructor == Array){\r\n            fromData.skills = fromData.skills.join()\r\n        }\r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('http://127.0.0.1:5000/api/profile/createupdateprofile/', fromData, config)\r\n        \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit? \"Profile Updated\": \"Profile Created\", \"success\"));\r\n        \r\n        \r\n        history.push('/dashboard');\r\n        \r\n\r\n\r\n    }   \r\n    catch(err){\r\n\r\n        const errors = err.response.data.errors\r\n        console.log(err)\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addEducation = (fromData, history, edit=false) => async dispatch=>{\r\n    try{    \r\n        \r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('http://127.0.0.1:5000/api/profile/addEducation/', fromData, config)\r\n        \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit? \"Education Updated\": \"Education Added\", \"success\"));\r\n        \r\n        \r\n        history.push('/dashboard');\r\n        \r\n\r\n\r\n    }   \r\n    catch(err){\r\n\r\n        const errors = err.response.data.errors\r\n        console.log(err)\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_EDUCATION_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n\r\n    }   \r\n\r\n}\r\n\r\nexport const addExperience = (fromData, history, edit=false) => async dispatch=>{\r\n    try{    \r\n        \r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('http://127.0.0.1:5000/api/profile/addExperience/', fromData, config)\r\n        \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit? \"Education Updated\": \"Education Added\", \"success\"));\r\n        \r\n        \r\n        history.push('/dashboard');\r\n        \r\n\r\n\r\n    }   \r\n    catch(err){\r\n\r\n        const errors = err.response.data.errors\r\n        console.log(err)\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_EXPERIENCE_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n\r\n    }   \r\n\r\n}\r\n\r\n\r\nexport const deleteExperience = (id) => async dispatch =>{\r\n    try{\r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const res = await axios.delete(`http://127.0.0.1:5000/api/profile/experience/${id}`, config)\r\n        \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit? \"Experience\": \"Experience deleted\", \"success\"));\r\n    }\r\n    catch(err){\r\n\r\n        const errors = err.response.data.errors\r\n        console.log(err)\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n\r\n    }   \r\n}\r\n\r\n\r\nexport const deleteEducation = (id) => async dispatch =>{\r\n    try{\r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const res = await axios.delete(`http://127.0.0.1:5000/api/profile/education/${id}`, config)\r\n        \r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit? \"Education\": \"Education deleted\", \"success\"));\r\n    }\r\n    catch(err){\r\n\r\n        const errors = err.response.data.errors\r\n        console.log(err)\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n\r\n    }   \r\n}\r\n\r\n\r\nexport const deleteAccount = (id) => async dispatch =>{\r\n\r\n    if(Window.confirm(\"Are you sure?\")){\r\n\r\n        try{\r\n            const config = {\r\n                headers : {\r\n                    \"content-type\": \"application/json\",\r\n                }\r\n            }\r\n    \r\n            const res = await axios.delete(`http://127.0.0.1:5000/api/profile/`, config)\r\n            \r\n            dispatch({\r\n                type: CLEAR_PROFILE,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch({\r\n                type: DELETE_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n            dispatch(setAlert(edit? \"Account\": \"Account deleted\", \"success\"));\r\n        }\r\n        catch(err){\r\n    \r\n            const errors = err.response.data.errors\r\n            console.log(err)\r\n            if(errors){\r\n                errors.forEach(error => {\r\n                    dispatch(setAlert(error,\"danger\"))\r\n                });\r\n            }\r\n    \r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {status:err.response.status, msg:err.response.statusText}\r\n            });\r\n    \r\n        }\r\n\r\n    }\r\n       \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}