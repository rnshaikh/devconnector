{"ast":null,"code":"import React,{Fragment}from'react';import{connect}from\"react-redux\";import Moment from'react-moment';import{removeComment}from'../../actions/post';function CommentList(_ref){var comments=_ref.comments,auth=_ref.auth,post_id=_ref.post_id,removeComment=_ref.removeComment;console.log(\"Comments\",comments,post_id);var removeCommentId=function removeCommentId(comment_id){removeComment(post_id,comment_id);};return/*#__PURE__*/React.createElement(Fragment,null,comments.map(function(comment){return/*#__PURE__*/React.createElement(\"div\",{className:\"post bg-white p-1 my-1\",key:comment._id},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"profile.html\"},/*#__PURE__*/React.createElement(\"img\",{className:\"round-img\",src:comment.avatar,alt:\"\"}),/*#__PURE__*/React.createElement(\"h4\",null,comment.name))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:\"my-1\"},comment.text),/*#__PURE__*/React.createElement(\"p\",{className:\"post-date\"},\"Posted on \",/*#__PURE__*/React.createElement(Moment,{format:\"YYYY/MM/DD\"},comment.date)),auth.user._id===comment.user?/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:function onClick(){removeCommentId(comment._id);}},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-times\"})):\"\"));}));}var mapStateToProps=function mapStateToProps(state){return{post:state.post,auth:state.auth};};export default connect(mapStateToProps,{removeComment:removeComment})(CommentList);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/comment/CommentList.js"],"names":["React","Fragment","connect","Moment","removeComment","CommentList","comments","auth","post_id","console","log","removeCommentId","comment_id","map","comment","_id","avatar","name","text","date","user","mapStateToProps","state","post"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,OAAQC,OAAR,KAAwB,aAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,OAAQC,aAAR,KAA4B,oBAA5B,CAGA,QAASC,CAAAA,WAAT,MAA+D,IAAzCC,CAAAA,QAAyC,MAAzCA,QAAyC,CAA/BC,IAA+B,MAA/BA,IAA+B,CAAzBC,OAAyB,MAAzBA,OAAyB,CAAhBJ,aAAgB,MAAhBA,aAAgB,CAE3DK,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBJ,QAAxB,CAAkCE,OAAlC,EAEA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,UAAD,CAAc,CAClCR,aAAa,CAACI,OAAD,CAAUI,UAAV,CAAb,CACH,CAFD,CAIA,mBACI,oBAAC,QAAD,MAEKN,QAAQ,CAACO,GAAT,CAAa,SAAAC,OAAO,CAAE,CACpB,mBAAO,2BAAK,SAAS,CAAC,wBAAf,CAAwC,GAAG,CAAEA,OAAO,CAACC,GAArD,eACN,4CACI,yBAAG,IAAI,CAAC,cAAR,eACA,2BACI,SAAS,CAAC,WADd,CAEI,GAAG,CAAED,OAAO,CAACE,MAFjB,CAGI,GAAG,CAAC,EAHR,EADA,cAMA,8BAAKF,OAAO,CAACG,IAAb,CANA,CADJ,CADM,cAWN,4CACI,yBAAG,SAAS,CAAC,MAAb,EACCH,OAAO,CAACI,IADT,CADJ,cAII,yBAAG,SAAS,CAAC,WAAb,4BACU,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EACLJ,OAAO,CAACK,IADH,CADV,CAJJ,CASKZ,IAAI,CAACa,IAAL,CAAUL,GAAV,GAAkBD,OAAO,CAACM,IAA1B,cACG,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,gBAAhC,CAAiD,OAAO,CAAE,kBAAI,CAACT,eAAe,CAACG,OAAO,CAACC,GAAT,CAAf,CAA6B,CAA5F,eACI,yBAAG,SAAS,CAAC,aAAb,EADJ,CADH,CAGe,EAZpB,CAXM,CAAP,CA2BF,CA5BA,CAFL,CADJ,CAkCH,CASD,GAAMM,CAAAA,eAAe,CAAC,QAAhBA,CAAAA,eAAgB,CAAAC,KAAK,QAAG,CAC1BC,IAAI,CAAED,KAAK,CAACC,IADc,CAE1BhB,IAAI,CAAEe,KAAK,CAACf,IAFc,CAAH,EAA3B,CAKA,cAAeL,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAACjB,aAAa,CAAbA,aAAD,CAAlB,CAAP,CAA0CC,WAA1C,CAAf","sourcesContent":["import React,{Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport {removeComment} from '../../actions/post';\r\n\r\n\r\nfunction CommentList({comments, auth, post_id, removeComment}) {\r\n\r\n    console.log(\"Comments\", comments, post_id)\r\n\r\n    const removeCommentId = (comment_id)=>{\r\n        removeComment(post_id, comment_id)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {comments.map(comment=>{\r\n               return(<div className=\"post bg-white p-1 my-1\" key={comment._id}>\r\n                <div>\r\n                    <a href=\"profile.html\">\r\n                    <img\r\n                        className=\"round-img\"\r\n                        src={comment.avatar}\r\n                        alt=\"\"\r\n                    />\r\n                    <h4>{comment.name}</h4>\r\n                    </a>\r\n                </div>\r\n                <div>\r\n                    <p className=\"my-1\">\r\n                    {comment.text}\r\n                    </p>\r\n                    <p className=\"post-date\">\r\n                    Posted on <Moment format=\"YYYY/MM/DD\">\r\n                        {comment.date}\r\n                    </Moment>\r\n                    </p>\r\n                    {auth.user._id === comment.user ?\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={()=>{removeCommentId(comment._id)}}>\r\n                            <i className=\"fa fa-times\"></i>\r\n                        </button> : \"\"\r\n                    }\r\n                </div>\r\n            </div>)\r\n            })}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCommentList.propTypes = {\r\n    comments : PropTypes.array.isRequired,\r\n    auth : PropTypes.object.isRequired,\r\n    removeComment: PropTypes.func.isRequired,\r\n    post_id: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    post: state.post,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {removeComment})(CommentList);"]},"metadata":{},"sourceType":"module"}