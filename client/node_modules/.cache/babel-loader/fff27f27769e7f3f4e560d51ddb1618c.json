{"ast":null,"code":"import { setAlert } from './alert';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport setAuthToken from '../utils/authToken';\nimport { useState } from 'react';\nexport const loadUser = () => async dispatch => {\n  debugger;\n\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('http://127.0.0.1:5000/api/users/current/');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_FAIL\n    });\n  }\n};\nexport const register = ({\n  name,\n  email,\n  password,\n  password2\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n    confirmPassword: password2\n  });\n\n  try {\n    debugger;\n    const res = await axios.post('http://127.0.0.1:5000/api/users/register/', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert(\"User Registered Successfully\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    debugger;\n    const res = await axios.post('http://127.0.0.1:5000/api/users/login/', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res\n    });\n    dispatch(setAlert(\"User Login Successfully\", \"success\"));\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch(setAlert(\"User Logout Successfully\", \"success\"));\n};","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/actions/auth.js"],"names":["setAlert","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","useState","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","password2","config","headers","body","JSON","stringify","confirmPassword","post","errors","response","forEach","error","login","logout"],"mappings":"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","sourcesContent":["import {setAlert} from './alert';\r\nimport axios from 'axios';\r\nimport{ REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT} from './types';\r\nimport setAuthToken from '../utils/authToken';\r\nimport { useState } from 'react';\r\n\r\nexport const loadUser = ()=> async dispatch=>{\r\n    debugger;\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    \r\n    try{\r\n        const res = await axios.get('http://127.0.0.1:5000/api/users/current/')\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: AUTH_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const register = ({name, email, password, password2})=> async dispatch =>{\r\n\r\n    const config = {\r\n        headers : {\r\n            \"content-type\": \"application/json\",\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password, confirmPassword:password2});\r\n    \r\n    try{\r\n        debugger;\r\n        const res = await axios.post('http://127.0.0.1:5000/api/users/register/', body, config);\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert(\"User Registered Successfully\",\"success\"))\r\n\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        })   \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const login = (email, password)=> async dispatch =>{\r\n\r\n    const config = {\r\n        headers : {\r\n            \"content-type\": \"application/json\",\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email, password});\r\n    \r\n    try{\r\n        debugger;\r\n        const res = await axios.post('http://127.0.0.1:5000/api/users/login/', body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res\r\n        })\r\n\r\n        dispatch(setAlert(\"User Login Successfully\",\"success\"))\r\n        dispatch(loadUser());\r\n\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })   \r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => async dispatch =>{\r\n\r\n    dispatch({\r\n            type: LOGOUT\r\n    })\r\n    dispatch(setAlert(\"User Logout Successfully\",\"success\"))\r\n\r\n}"]},"metadata":{},"sourceType":"module"}