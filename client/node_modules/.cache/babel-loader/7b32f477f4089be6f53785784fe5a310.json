{"ast":null,"code":"import React,{useEffect,Fragment}from'react';import{connect}from\"react-redux\";import{getAllProfile}from'../../actions/profile';import Spinner from\"../layout/Spinner\";import{Link}from'react-router-dom';function Profiles(_ref){var getAllProfile=_ref.getAllProfile,auth=_ref.auth,profile=_ref.profile;useEffect(function(){getAllProfile();},[getAllProfile]);console.log(\"Profiles\",profile);var profiles=profile.profiles.map(function(prof){return/*#__PURE__*/React.createElement(\"div\",{className:\"profile bg-light\",key:prof._id},/*#__PURE__*/React.createElement(\"img\",{className:\"round-img\",src:prof.user.avatar,alt:\"\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,prof.user.name),/*#__PURE__*/React.createElement(\"p\",null,prof.status,\" at \",prof.company),/*#__PURE__*/React.createElement(\"p\",null,prof.location),/*#__PURE__*/React.createElement(Link,{className:\"btn btn-primary\",to:\"/profile/\".concat(prof.user._id)},\"View Profile\")),/*#__PURE__*/React.createElement(\"ul\",null,prof.skills.slice(0,4).map(function(skill){return/*#__PURE__*/React.createElement(\"li\",{className:\"text-primary\",key:skill},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-check\"}),\" \",skill);})));});return profile.loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"section\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Developers\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fab fa-connectdevelop\"}),\" Browse and connect with developers\"),/*#__PURE__*/React.createElement(\"div\",{className:\"profiles\"},profile.profiles.length>0?profiles:/*#__PURE__*/React.createElement(\"h4\",null,\"No Profile Found..........\"))));}var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,profile:state.profile};};export default connect(mapStateToProps,{getAllProfile:getAllProfile})(Profiles);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/dashboard/Profiles.js"],"names":["React","useEffect","Fragment","connect","getAllProfile","Spinner","Link","Profiles","auth","profile","console","log","profiles","map","prof","_id","user","avatar","name","status","company","location","skills","slice","skill","loading","length","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,CAAyBC,QAAzB,KAAwC,OAAxC,CACA,OAAQC,OAAR,KAAwB,aAAxB,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CAEA,QAASC,CAAAA,QAAT,MAAkD,IAA/BH,CAAAA,aAA+B,MAA/BA,aAA+B,CAAhBI,IAAgB,MAAhBA,IAAgB,CAAVC,OAAU,MAAVA,OAAU,CAE9CR,SAAS,CAAC,UAAM,CACZG,aAAa,GAChB,CAFQ,CAEN,CAACA,aAAD,CAFM,CAAT,CAIAM,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBF,OAAxB,EACA,GAAMG,CAAAA,QAAQ,CAAGH,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqB,SAAAC,IAAI,qBAElC,2BAAK,SAAS,CAAC,kBAAf,CAAkC,GAAG,CAAEA,IAAI,CAACC,GAA5C,eACA,2BACI,SAAS,CAAC,WADd,CAEI,GAAG,CAAED,IAAI,CAACE,IAAL,CAAUC,MAFnB,CAGI,GAAG,CAAC,EAHR,EADA,cAMA,4CACI,8BAAKH,IAAI,CAACE,IAAL,CAAUE,IAAf,CADJ,cAEI,6BAAIJ,IAAI,CAACK,MAAT,QAAqBL,IAAI,CAACM,OAA1B,CAFJ,cAGI,6BAAIN,IAAI,CAACO,QAAT,CAHJ,cAII,oBAAC,IAAD,EAAM,SAAS,CAAC,iBAAhB,CAAkC,EAAE,oBAAcP,IAAI,CAACE,IAAL,CAAUD,GAAxB,CAApC,iBAJJ,CANA,cAaA,8BACED,IAAI,CAACQ,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,CAAoB,CAApB,EAAuBV,GAAvB,CAA2B,SAAAW,KAAK,qBAC9B,0BAAI,SAAS,CAAC,cAAd,CAA6B,GAAG,CAAEA,KAAlC,eACA,yBAAG,SAAS,CAAC,aAAb,EADA,KACiCA,KADjC,CAD8B,EAAhC,CADF,CAbA,CAFkC,EAAzB,CAAjB,CAyBA,MAAOf,CAAAA,OAAO,CAACgB,OAAR,cAAkB,oBAAC,OAAD,MAAlB,cACH,oBAAC,QAAD,mBACI,+BAAS,SAAS,CAAC,WAAnB,eACA,0BAAI,SAAS,CAAC,oBAAd,eADA,cAEA,yBAAG,SAAS,CAAC,MAAb,eACI,yBAAG,SAAS,CAAC,uBAAb,EADJ,uCAFA,cAKJ,2BAAK,SAAS,CAAC,UAAf,EACKhB,OAAO,CAACG,QAAR,CAAiBc,MAAjB,CAAwB,CAAxB,CACGd,QADH,cAGD,2DAJJ,CALI,CADJ,CADJ,CAiBH,CAMD,GAAMe,CAAAA,eAAe,CAAC,QAAhBA,CAAAA,eAAgB,CAAAC,KAAK,QAAG,CAC1BpB,IAAI,CAAGoB,KAAK,CAACpB,IADa,CAE1BC,OAAO,CAAGmB,KAAK,CAACnB,OAFU,CAAH,EAA3B,CAKA,cAAeN,CAAAA,OAAO,CAACwB,eAAD,CAAkB,CAAEvB,aAAa,CAAbA,aAAF,CAAlB,CAAP,CAA4CG,QAA5C,CAAf","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport { getAllProfile } from '../../actions/profile';\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Profiles({getAllProfile, auth, profile}) {\r\n\r\n    useEffect(() => {\r\n        getAllProfile();\r\n    }, [getAllProfile]);\r\n\r\n    console.log(\"Profiles\", profile)\r\n    const profiles = profile.profiles.map(prof =>\r\n        (\r\n            <div className=\"profile bg-light\" key={prof._id}>\r\n            <img\r\n                className=\"round-img\"\r\n                src={prof.user.avatar}\r\n                alt=\"\"\r\n            />\r\n            <div>\r\n                <h2>{prof.user.name}</h2>\r\n                <p>{prof.status} at {prof.company}</p>\r\n                <p>{prof.location}</p>\r\n                <Link className=\"btn btn-primary\" to={`/profile/${prof.user._id}`}>View Profile</Link>\r\n            </div>\r\n\r\n            <ul>\r\n            { prof.skills.slice(0,4).map(skill=>(\r\n                <li className=\"text-primary\" key={skill}>\r\n                <i className=\"fa fa-check\"></i> {skill}\r\n                </li>    \r\n            ))}\r\n            </ul>\r\n            </div>\r\n        )\r\n        )\r\n    return profile.loading ? <Spinner></Spinner>:\r\n        <Fragment>\r\n            <section className=\"container\">\r\n            <h1 className=\"large text-primary\">Developers</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\r\n            </p>\r\n        <div className=\"profiles\">\r\n            {profile.profiles.length>0?(\r\n                profiles\r\n            ):\r\n            <h4>No Profile Found..........</h4>\r\n            }   \r\n        </div>\r\n        </section>\r\n\r\n    </Fragment>\r\n}\r\n\r\nProfiles.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    profile : PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps=state=>({\r\n    auth : state.auth,\r\n    profile : state.profile,\r\n  })\r\n  \r\nexport default connect(mapStateToProps, { getAllProfile })(Profiles);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}