{"ast":null,"code":"import { setAlert } from './alert';\nimport axios from 'axios';\nimport { GET_POST, POST_ERROR, GET_ALL_POST } from './types';\nexport const createPost = (fromData, history, edit = false) => async dispatch => {\n  try {\n    console.log(\"Profile Form Data\", fromData);\n    debugger;\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const res = await axios.post('http://127.0.0.1:5000/api/posts/', fromData, config);\n    dispatch({\n      type: GET_ALL_POST,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err);\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const getPost = () => async dispatch => {\n  try {\n    const res = await axios.get(`http://127.0.0.1:5000/api/posts/`);\n    dispatch({\n      type: GET_ALL_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    debugger;\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const getPostById = id => async dispatch => {\n  try {\n    const res = await axios.get(`http://127.0.0.1:5000/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    debugger;\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://127.0.0.1:5000/api/posts/${id}`);\n    dispatch({\n      type: GET_ALL_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    debugger;\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    body = {\n      \"msg\": \"text\"\n    };\n    const res = await axios.put(`http://127.0.0.1:5000/api/posts/like/${id}`, body, config);\n    dispatch({\n      type: GET_ALL_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    debugger;\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};\nexport const unlikePost = id => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    body = {};\n    const res = await axios.put(`http://127.0.0.1:5000/api/posts/unlike/${id}`, body, config);\n    dispatch({\n      type: GET_ALL_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    debugger;\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status,\n        msg: err.response.statusText\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/actions/post.js"],"names":["setAlert","axios","GET_POST","POST_ERROR","GET_ALL_POST","createPost","fromData","history","edit","dispatch","console","log","config","headers","res","post","type","payload","data","push","err","errors","response","forEach","error","status","msg","statusText","getPost","get","getPostById","id","deletePost","delete","likePost","body","put","unlikePost"],"mappings":"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","sourcesContent":["import {setAlert} from './alert';\r\nimport axios from 'axios';\r\nimport{ GET_POST, POST_ERROR,GET_ALL_POST } from './types';\r\n\r\nexport const createPost = (fromData, history, edit=false) => async dispatch =>{\r\n    try{    \r\n        console.log(\"Profile Form Data\", fromData)\r\n        debugger;\r\n\r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('http://127.0.0.1:5000/api/posts/', fromData, config)\r\n        \r\n        dispatch({\r\n            type: GET_ALL_POST,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit? \"Profile Updated\": \"Profile Created\", \"success\"));\r\n        \r\n        \r\n        history.push('/dashboard');\r\n        \r\n\r\n\r\n    }   \r\n    catch(err){\r\n\r\n        const errors = err.response.data.errors\r\n        console.log(err)\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error,\"danger\"))\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getPost = ()=> async dispatch =>{\r\n\r\n    try{\r\n\r\n        const res = await axios.get(`http://127.0.0.1:5000/api/posts/`)\r\n\r\n        dispatch({\r\n            type: GET_ALL_POST,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){ \r\n        debugger;\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getPostById = (id)=> async dispatch =>{\r\n\r\n    try{\r\n\r\n        const res = await axios.get(`http://127.0.0.1:5000/api/posts/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){ \r\n        debugger;\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const deletePost = (id)=> async dispatch =>{\r\n\r\n    try{\r\n\r\n        const res = await axios.delete(`http://127.0.0.1:5000/api/posts/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_ALL_POST,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){ \r\n        debugger;\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const likePost = (id)=> async dispatch =>{\r\n\r\n    try{\r\n\r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        body = {\"msg\": \"text\"}\r\n\r\n        const res = await axios.put(`http://127.0.0.1:5000/api/posts/like/${id}`, body, config)\r\n\r\n        dispatch({\r\n            type: GET_ALL_POST,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){ \r\n        debugger;\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const unlikePost = (id)=> async dispatch =>{\r\n\r\n    try{\r\n\r\n        const config = {\r\n            headers : {\r\n                \"content-type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        body = {}\r\n\r\n        const res = await axios.put(`http://127.0.0.1:5000/api/posts/unlike/${id}`, body, config)\r\n\r\n        dispatch({\r\n            type: GET_ALL_POST,\r\n            payload: res.data\r\n        })\r\n\r\n    }\r\n    catch(err){ \r\n        debugger;\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {status:err.response.status, msg:err.response.statusText}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}