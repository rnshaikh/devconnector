{"ast":null,"code":"import React,{useEffect,Fragment}from'react';import{connect}from\"react-redux\";import{getGithubRepo}from'../../actions/profile';function GitHubDetail(_ref){var profile=_ref.profile,getGithubRepo=_ref.getGithubRepo;useEffect(function(){getGithubRepo(profile.profile.handle);},[getGithubRepo]);console.log(\"Github............\",profile);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"profile-github\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary my-1\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fab fa-github\"}),\" Github Repos\"),profile.repos!==null&&profile.repos?profile.repos.map(function(repo){return/*#__PURE__*/React.createElement(\"div\",{className:\"repo bg-white p-1 my-1\",key:repo.html_url},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(\"a\",{href:repo.html_url,target:\"_blank\",rel:\"noopener noreferrer\"},repo.name)),/*#__PURE__*/React.createElement(\"p\",null,repo.description)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-primary\"},\"Stars: \",repo.stargazers_count),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-dark\"},\"Watchers: \",repo.watchers_count),/*#__PURE__*/React.createElement(\"li\",{className:\"badge badge-light\"},\"Forks: \",repo.forks_count))));}):/*#__PURE__*/React.createElement(\"strong\",null,\"No Found\")));}var mapStateToProps=function mapStateToProps(state){return{profile:state.profile};};export default connect(mapStateToProps,{getGithubRepo:getGithubRepo})(GitHubDetail);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/dashboard/GitHubDetail.js"],"names":["React","useEffect","Fragment","connect","getGithubRepo","GitHubDetail","profile","handle","console","log","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,CAAyBC,QAAzB,KAAwC,OAAxC,CACA,OAAQC,OAAR,KAAwB,aAAxB,CAEA,OAAQC,aAAR,KAA4B,uBAA5B,CAEA,QAASC,CAAAA,YAAT,MAA+C,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CAAhBF,aAAgB,MAAhBA,aAAgB,CAE3CH,SAAS,CAAC,UAAM,CACZG,aAAa,CAACE,OAAO,CAACA,OAAR,CAAgBC,MAAjB,CAAb,CACH,CAFQ,CAEN,CAACH,aAAD,CAFM,CAAT,CAIAI,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAiCH,OAAjC,EACA,mBACI,oBAAC,QAAD,mBACI,2BAAK,SAAS,CAAC,gBAAf,eACF,0BAAI,SAAS,CAAC,mBAAd,eACE,yBAAG,SAAS,CAAC,eAAb,EADF,iBADE,CAIDA,OAAO,CAACI,KAAR,GAAkB,IAAlB,EAA0BJ,OAAO,CAACI,KAAlC,CAA0CJ,OAAO,CAACI,KAAR,CAAcC,GAAd,CAAkB,SAAAC,IAAI,qBAC/D,2BAAK,SAAS,CAAC,wBAAf,CAAwC,GAAG,CAAEA,IAAI,CAACC,QAAlD,eACA,4CACE,2CAAI,yBAAG,IAAI,CAAED,IAAI,CAACC,QAAd,CAAwB,MAAM,CAAC,QAA/B,CACA,GAAG,CAAC,qBADJ,EAC2BD,IAAI,CAACE,IADhC,CAAJ,CADF,cAGE,6BACGF,IAAI,CAACG,WADR,CAHF,CADA,cAQA,4CACE,2CACM,0BAAI,SAAS,CAAC,qBAAd,YAA4CH,IAAI,CAACI,gBAAjD,CADN,cAEM,0BAAI,SAAS,CAAC,kBAAd,eAA4CJ,IAAI,CAACK,cAAjD,CAFN,cAGM,0BAAI,SAAS,CAAC,mBAAd,YAA0CL,IAAI,CAACM,WAA/C,CAHN,CADF,CARA,CAD+D,EAAtB,CAA1C,cAiBG,6CArBF,CADJ,CADJ,CA2BH,CAQD,GAAMC,CAAAA,eAAe,CAAC,QAAhBA,CAAAA,eAAgB,CAAAC,KAAK,QAAG,CAC1Bd,OAAO,CAAGc,KAAK,CAACd,OADU,CAAH,EAA3B,CAIA,cAAeH,CAAAA,OAAO,CAACgB,eAAD,CAAkB,CAAEf,aAAa,CAAbA,aAAF,CAAlB,CAAP,CAA4CC,YAA5C,CAAf","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {getGithubRepo} from '../../actions/profile';\r\n\r\nfunction GitHubDetail({profile,getGithubRepo}) {\r\n\r\n    useEffect(() => {\r\n        getGithubRepo(profile.profile.handle);\r\n    }, [getGithubRepo]);\r\n\r\n    console.log(\"Github............\",profile)\r\n    return (\r\n        <Fragment>\r\n            <div className=\"profile-github\">\r\n          <h2 className=\"text-primary my-1\">\r\n            <i className=\"fab fa-github\"></i> Github Repos\r\n          </h2>\r\n          {profile.repos !== null && profile.repos ? profile.repos.map(repo=>(\r\n            <div className=\"repo bg-white p-1 my-1\" key={repo.html_url}>\r\n            <div>\r\n              <h4><a href={repo.html_url} target=\"_blank\"\r\n                  rel=\"noopener noreferrer\">{repo.name}</a></h4>\r\n              <p>\r\n                {repo.description}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                    <li className=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                    <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                    <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n            </div>\r\n          )): <strong>No Found</strong>}\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGitHubDetail.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    getGithubRepo: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    profile : state.profile\r\n  })\r\n  \r\nexport default connect(mapStateToProps, { getGithubRepo })(GitHubDetail);\r\n\r\n"]},"metadata":{},"sourceType":"module"}