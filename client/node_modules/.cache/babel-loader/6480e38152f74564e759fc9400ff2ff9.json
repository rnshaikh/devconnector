{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshaikh\\\\Desktop\\\\development\\\\dev-front\\\\src\\\\components\\\\post\\\\Posts.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { getPost, createPost } from '../../actions/post';\nimport { useState } from 'react';\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport PostList from './PostList';\n\nfunction Posts({\n  posts,\n  post,\n  getPost,\n  createPost\n}) {\n  const [formdata, setformdata] = useState({\n    text: \"\"\n  });\n  useEffect(() => {\n    getPost();\n  }, []);\n  console.log(\"Posts.js\", posts, post);\n\n  const onChange = e => {\n    setformdata({ ...formdata,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createPost(formdata, history);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }), \" Welcome to the community!\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bg-primary p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Say Something...\")), /*#__PURE__*/React.createElement(\"form\", {\n    class: \"form my-1\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"text\",\n    cols: \"30\",\n    rows: \"5\",\n    value: text,\n    placeholder: \"Create a post\",\n    required: true,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    class: \"btn btn-dark my-1\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(PostList, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\n\nPosts.propTypes = {\n  post: PropTypes.object.isRequired,\n  posts: PropTypes.object.isRequired,\n  getPost: PropTypes.func.isRequired,\n  createPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  posts: state.posts\n});\n\nexport default connect(mapStateToProps, {\n  getPost,\n  createPost\n})(Posts);","map":{"version":3,"sources":["C:/Users/rshaikh/Desktop/development/dev-front/src/components/post/Posts.js"],"names":["React","useEffect","Fragment","connect","getPost","createPost","useState","Spinner","PropTypes","Link","PostList","Posts","posts","post","formdata","setformdata","text","console","log","onChange","e","target","name","value","onSubmit","preventDefault","history","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{useEffect, Fragment} from 'react';\r\nimport{ connect }  from \"react-redux\";\r\nimport { getPost, createPost } from '../../actions/post';\r\nimport { useState } from 'react'\r\n\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport PostList from './PostList';\r\n\r\n\r\nfunction Posts({posts, post, getPost, createPost}) {\r\n\r\n    const [formdata, setformdata] = useState({\r\n        text:\"\",\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getPost();\r\n    }, []);\r\n\r\n    console.log(\"Posts.js\", posts, post)\r\n    const onChange =(e)=>{ setformdata({...formdata, [e.target.name]:e.target.value})};\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        createPost(formdata, history)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n                Posts\r\n            </h1>\r\n            <p class=\"lead\"><i class=\"fas fa-user\"></i> Welcome to the community!</p>\r\n\r\n            <div class=\"post-form\">\r\n                <div class=\"bg-primary p\">\r\n                    <h3>Say Something...</h3>\r\n                </div>\r\n                <form class=\"form my-1\" onSubmit={e=> onSubmit(e)}>\r\n                    <textarea\r\n                        name=\"text\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        value={text}\r\n                        placeholder=\"Create a post\"\r\n                        required\r\n                        onChange={(e)=>onChange(e)}\r\n                    ></textarea>\r\n                    <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n\r\n            <PostList post={post}></PostList>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    posts : PropTypes.object.isRequired,\r\n    getPost: PropTypes.func.isRequired,\r\n    createPost: PropTypes.func.isRequired,\r\n\r\n}\r\nconst mapStateToProps=state=>({\r\n    post: state.post,\r\n    posts : state.posts,\r\n})\r\n  \r\nexport default connect(mapStateToProps, { getPost, createPost })(Posts);\r\n"]},"metadata":{},"sourceType":"module"}